services:
  db:
    image: postgres:latest
    container_name: videoflix_database
    env_file: .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql
    ports:
      - "5432:5432"


  redis:
    image: redis:7-alpine
    container_name: videoflix_redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"


  web:
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started   
    build:
      context: .
      dockerfile: backend.Dockerfile
    env_file: .env
    container_name: videoflix_backend

    volumes:
      - ./core:/app/core
      - ./user_auth_app:/app/user_auth_app
      - ./videoflix_app:/app/videoflix_app
      - ./manage.py:/app/manage.py
      - ./backend.entrypoint.sh:/app/backend.entrypoint.sh
      - videoflix_media:/app/media
      - videoflix_static:/app/static
      - ./htmlcov:/app/htmlcov 
    ports:
      - "8000:8000"


  worker:
    build:
      context: .
      dockerfile: backend.Dockerfile
    env_file: .env
    container_name: videoflix_worker
    # entrypoint: sh
    # command: -c "python manage.py rqworker default"
    environment: 
      RUN: worker
    volumes:
      - ./core:/app/core
      - ./user_auth_app:/app/user_auth_app
      - ./videoflix_app:/app/videoflix_app
      - ./manage.py:/app/manage.py
      - ./backend.entrypoint.sh:/app/backend.entrypoint.sh
      - videoflix_media:/app/media
      - videoflix_static:/app/static
    depends_on:
      - db
      - redis


volumes:
  postgres_data:
  redis_data:
  videoflix_media:
  videoflix_static:



